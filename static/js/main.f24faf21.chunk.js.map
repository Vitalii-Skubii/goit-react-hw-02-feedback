{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/App.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/App.js","index.js"],"names":["module","exports","Notification","notificat","className","styles","p","Statistics","good","neutral","bad","total","goodFeegbackPercentage","list","listItem","Section","title","children","propTipes","PropTipes","string","isRequired","element","FeedbackButton","feedback","onFeedbackLeave","id","btn","type","data-feedback","onClick","FeedbackOptions","stats","map","stat","indexOf","App","state","handlerFeedback","target","dataset","setState","prevState","totalStatsCounter","goodFeegbackPercentageCounter","Math","round","this","wrapper","ButtonNames","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,sBCA7DD,EAAOC,QAAU,CAAC,EAAI,0B,gBCAtBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,uB,4RCQbC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAAmB,mBAAGC,UAAWC,IAAOC,EAArB,SAAyBH,K,gBCyBlDI,EAxBI,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,uBAC/C,OACE,mCACGD,EACC,qBAAIP,UAAWC,IAAOQ,KAAtB,UACE,qBAAIT,UAAWC,IAAOS,SAAtB,kBAAsCN,KACtC,qBAAIJ,UAAWC,IAAOS,SAAtB,qBAAyCL,KACzC,qBAAIL,UAAWC,IAAOS,SAAtB,iBAAqCJ,KACrC,qBAAIN,UAAWC,IAAOS,SAAtB,mBAAuCH,KACvC,qBAAIP,UAAWC,IAAOS,SAAtB,+BACqBF,EADrB,UAKF,cAAC,EAAD,CAAcT,UAAU,yB,iCCd1BY,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIb,UAAWC,IAAOW,MAAtB,SAA8BA,IAC7BC,MAKPF,EAAQG,UAAY,CAClBF,MAAOG,IAAUC,OAAOC,WACxBJ,SAAUE,IAAUG,QAAQD,YAGfN,Q,iBCdTQ,EAAiB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,gBAAiBC,EAAS,EAATA,GACnD,OACE,wBACEtB,UAAWC,IAAOsB,IAClBC,KAAK,SACLC,gBAAeL,EACfM,QAASL,EAJX,SAOGD,GAFIE,IAsBIK,EAfS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOP,EAAsB,EAAtBA,gBAChC,OAAOO,EAAMC,KAAI,SAAAC,GAAI,OACnB,cAAC,EAAD,CACEV,SAAUU,EACVT,gBAAiBA,EACjBC,GAAIM,EAAMG,QAAQD,S,yBCiCTE,E,4MAhDbC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP4B,gBAAkB,YAAiB,IACzBd,EADwB,EAAbe,OACSC,QAApBhB,SACR,EAAKiB,UAAS,SAAAC,GAAS,sBAAQlB,EAAWkB,EAAUlB,GAAY,O,EAGlEmB,kBAAoB,WAAO,IAAD,EACO,EAAKN,MACpC,OAFwB,EAChB7B,KADgB,EACVC,QADU,EACDC,K,EAIzBkC,8BAAgC,WAAO,IAC7BpC,EAAS,EAAK6B,MAAd7B,KACFG,EAAQ,EAAKgC,oBACnB,OAAOhC,EAAQkC,KAAKC,MAAOtC,EAAOG,EAAS,KAAO,G,4CAGpD,WAAU,IAAD,EACwBoC,KAAKV,MAA5B7B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQoC,KAAKJ,oBACb/B,EAAyBmC,KAAKH,gCACpC,OACE,sBAAKxC,UAAWC,IAAO2C,QAAvB,UACE,cAAC,EAAD,CAAShC,MAAM,6BAAf,SACE,cAAC,EAAD,CACEgB,MAAOiB,EACPxB,gBAAiBsB,KAAKT,oBAG1B,cAAC,EAAD,CAAStB,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,uBAAwBA,a,GAzClBsC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f24faf21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__HxPB-\",\"listItem\":\"Statistics_listItem__20GFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Notification_p__1lZWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__le80j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1ZC-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__25BWV\"};","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ notificat }) => <p className={styles.p}>{notificat}</p>;\r\n\r\nNotification.propTypes = {\r\n  notificat: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, goodFeegbackPercentage }) => {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <ul className={styles.list}>\r\n          <li className={styles.listItem}>good:{good}</li>\r\n          <li className={styles.listItem}>neutral:{neutral}</li>\r\n          <li className={styles.listItem}>bad:{bad}</li>\r\n          <li className={styles.listItem}>total:{total}</li>\r\n          <li className={styles.listItem}>\r\n            Positive feedback:{goodFeegbackPercentage}%\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification notificat=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTipes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTipes = {\r\n  title: PropTipes.string.isRequired,\r\n  children: PropTipes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackButton = ({ feedback, onFeedbackLeave, id }) => {\r\n  return (\r\n    <button\r\n      className={styles.btn}\r\n      type=\"button\"\r\n      data-feedback={feedback}\r\n      onClick={onFeedbackLeave}\r\n      key={id}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOptions = ({ stats, onFeedbackLeave }) => {\r\n  return stats.map(stat => (\r\n    <FeedbackButton\r\n      feedback={stat}\r\n      onFeedbackLeave={onFeedbackLeave}\r\n      id={stats.indexOf(stat)}\r\n    />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onFeedbackLeave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport styles from './App.module.css';\nimport ButtonNames from '../data/ButtonNames.json';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handlerFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  totalStatsCounter = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  goodFeegbackPercentageCounter = () => {\n    const { good } = this.state;\n    const total = this.totalStatsCounter();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.totalStatsCounter();\n    const goodFeegbackPercentage = this.goodFeegbackPercentageCounter();\n    return (\n      <div className={styles.wrapper}>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            stats={ButtonNames}\n            onFeedbackLeave={this.handlerFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            goodFeegbackPercentage={goodFeegbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './base.css';\nimport './reset.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}